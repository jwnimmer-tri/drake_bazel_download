# SPDX-License-Identifier: MIT-0

workspace(name = "drake_external_examples")

# Python boilerplate per https://github.com/bazelbuild/rules_python/releases.

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "rules_python",
    sha256 = "9d04041ac92a0985e344235f5d946f71ac543f1b1565f2cdbc9a2aaee8adf55b",
    strip_prefix = "rules_python-0.26.0",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.26.0/rules_python-0.26.0.tar.gz",
)

load("@rules_python//python:repositories.bzl", "py_repositories")

py_repositories()

# The next block establishes the operating system and architecture we'll be
# targeting. Permitted values for OS_CODENAME are "focal", "jammy", "mac",
# "mac-arm64". (Refer to https://drake.mit.edu/from_binary.html for details.)
# Here, we'll use a function to probe which operating system we're running on,
# but if you only need to support one then you could also just hard-code the
# OS_CODENAME string instead of probing.

load(":os_codename.bzl", "os_codename_repository")

os_codename_repository(name = "os_codename")

load("@os_codename//:defs.bzl", "OS_CODENAME")

# Choose which nightly build of Drake to use.
DRAKE_RELEASE = "latest"  # Can also use YYYYMMDD here, e.g., "20191026".
DRAKE_CHECKSUM = ""       # When using YYYYMMDD, best to add a checksum here.
DRAKE_URL = "https://drake-packages.csail.mit.edu/drake/nightly/drake-{}-{}.tar.gz".format(DRAKE_RELEASE, OS_CODENAME)

# Fetch the Drake binary.
http_archive(
    name = "drake_artifacts",
    url = DRAKE_URL,
    sha256 = DRAKE_CHECKSUM,
    strip_prefix = "drake/",
    build_file_content = "exports_files(glob(['**']))",
)

# Load and run the repository rule that knows how to provide the @drake
# repository based on a fetched Drake binary.
load("@drake_artifacts//:share/drake/repo.bzl", "drake_repository")

drake_repository(name = "drake")
